name: deploy

on:
  push:
    branches: [main]
    paths:
      - "api/**"
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy API (CF Workers)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify required secrets present
        run: |
          set -e
          [ -n "$CLOUDFLARE_API_TOKEN" ] || { echo "::error::CLOUDFLARE_API_TOKEN secret is missing"; exit 1; }
          [ -n "$CLOUDFLARE_ACCOUNT_ID" ]  || { echo "::error::CLOUDFLARE_ACCOUNT_ID secret is missing"; exit 1; }

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json

      - name: Install API deps
        working-directory: api
        run: npm ci --no-audit --no-fund

      - name: List key deps (debug)
        working-directory: api
        run: |
          node -v
          npm -v
          npm ls hono || true
          npm ls @neondatabase/serverless || true

      - name: Show wrangler.toml (first lines)
        working-directory: api
        run: sed -n '1,120p' wrangler.toml || true

      - name: Deploy (npx wrangler@4)
        working-directory: api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler@4 --version
          # If you use [env.production] in wrangler.toml, add: --env production
          npx wrangler@4 deploy --config wrangler.toml
