name: ci

on:
  pull_request:
  push:

jobs:
  api:
    name: api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            api/package-lock.json
            api/pnpm-lock.yaml

      - name: Install deps (npm or pnpm)
        run: |
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm --version
            pnpm install --no-frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Typecheck if present
        run: npx -y tsc --noEmit || echo "tsc not present; skipping"

      # ✅ NEW: ultra-fast syntax/bundle smoke to catch TS/ES errors early
      - name: Esbuild syntax bundle (fast smoke)
        run: npx --yes esbuild src/index.ts --bundle --platform=neutral --outfile=out.tmp.js

      # ✅ NEW: route audit to ensure a single owner for api.cognomega.com/*
      - name: Route audit (api.cognomega.com/* must have exactly one owner)
        run: |
          set -euo pipefail
          test -f wrangler.toml
          hits=$(grep -E '^\s*\{\s*pattern\s*=\s*"api\.cognomega\.com/\*"' wrangler.toml | wc -l | tr -d ' ')
          if [ "$hits" != "1" ]; then
            echo "::error title=Route audit failed::Expected exactly one api.cognomega.com/* route in api/wrangler.toml, found $hits"
            exit 1
          fi

      - name: Build if present
        run: npm run -s build --if-present || true

  frontend:
    name: frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            frontend/package-lock.json
            frontend/pnpm-lock.yaml

      - name: Install deps (npm or pnpm)
        run: |
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm --version
            pnpm install --no-frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      - name: Typecheck if present
        run: npx -y tsc --noEmit || echo "tsc not present; skipping"

      - name: Build if present
        run: npm run -s build --if-present || true
