name: deploy

on:
  push:
    branches: [ main ]
    paths:
      - "api/**"
      - ".github/workflows/deploy.yml"
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy API (CF Workers)
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: npm
          cache-dependency-path: api/package-lock.json

      - name: Install API deps
        working-directory: api
        run: |
          if [ -f pnpm-lock.yaml ]; then
            corepack enable
            pnpm i --no-frozen-lockfile
          elif [ -f package-lock.json ]; then
            npm ci
          else
            npm i
          fi

      - name: List key deps (debug)
        working-directory: api
        run: |
          node -v
          npm -v
          node -e "const p=require('./package.json'); for(const[k,v] of Object.entries(p.dependencies||{})){console.log(`${k}@${v}`)}"

      - name: Deploy (npx wrangler@4)
        working-directory: api
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: npx wrangler@4 deploy

  smoke:
    name: Post-deploy smoke (prod)
    needs: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    env:
      BASE: https://api.cognomega.com
      SMOKE_EMAIL: ${{ secrets.SMOKE_EMAIL }} # optional: set to run the email-required checks
    steps:
      - name: JWKS + X-Request-Id
        run: |
          set -euo pipefail
          curl -sS -D jwks_headers.txt -o jwks.json "$BASE/.well-known/jwks.json"
          echo "== JWKS head ==" | tee proofs.txt
          head -c 120 jwks.json | tee -a proofs.txt
          echo "" | tee -a proofs.txt
          REQID=$(grep -i '^x-request-id:' jwks_headers.txt | awk '{print $2}' | tr -d '\r')
          echo "X-Request-Id: ${REQID}" | tee -a proofs.txt
          test -n "$REQID"

      - name: Guest JWT (RS256 + iss)
        run: |
          set -euo pipefail
          curl -sS -X POST "$BASE/auth/guest" -o guest.json
          node -e "const fs=require('fs');const tok=JSON.parse(fs.readFileSync('guest.json','utf8')).token; const [h,p]=tok.split('.'); function b64(s){s=s.replace(/-/g,'+').replace(/_/g,'/'); while(s.length%4) s+='='; return Buffer.from(s,'base64').toString('utf8'); } const H=JSON.parse(b64(h)); const P=JSON.parse(b64(p)); console.log(JSON.stringify({alg:H.alg||'',kid:H.kid||'',iss:P.iss||'',exp:P.exp||0},null,2));" > jwt_info.json
          echo "== JWT info ==" | tee -a proofs.txt
          cat jwt_info.json | tee -a proofs.txt
          node -e "const j=require('./jwt_info.json'); if(j.alg!=='RS256'){console.error('alg not RS256');process.exit(1)} if(!j.iss || !j.iss.startsWith('https://api.cognomega.com')){console.error('bad iss');process.exit(1)}"

      - name: Balance (header + guest)
        run: |
          set -euo pipefail
          echo "== Balance header ==" | tee -a proofs.txt
          if [ -n "${SMOKE_EMAIL:-}" ]; then
            curl -sS "$BASE/api/billing/balance" -H "X-User-Email: $SMOKE_EMAIL" | tee -a proofs.txt
          else
            echo "(SMOKE_EMAIL not set; skipping)" | tee -a proofs.txt
          fi
          echo "\n== Balance guest ==" | tee -a proofs.txt
          TOK=$(node -p "require('./guest.json').token")
          curl -sS "$BASE/api/billing/balance" -H "Authorization: Bearer $TOK" | tee -a proofs.txt

      - name: SI ask metering headers (optional)
        if: env.SMOKE_EMAIL != ''
        run: |
          set -euo pipefail
          curl -sS -D si_headers.txt -o /dev/null -X POST "$BASE/api/si/ask" \
            -H "Content-Type: application/json" \
            -H "X-User-Email: $SMOKE_EMAIL" \
            --data '{"input":"post-deploy smoke"}'
          echo "== SI ask headers ==" | tee -a proofs.txt
          awk 'BEGIN{IGNORECASE=1}/^x-provider:|^x-model:|^x-tokens-in:|^x-tokens-out:|^x-credits-used:|^x-request-id:/{print}' si_headers.txt | tee -a proofs.txt
          grep -qi '^x-provider:' si_headers.txt
          grep -qi '^x-model:' si_headers.txt
          grep -qi '^x-request-id:' si_headers.txt

      - name: Preflight (OPTIONS /api/si/ask)
        run: |
          set -euo pipefail
          echo "== Preflight /api/si/ask ==" | tee -a proofs.txt
          curl -sS -I -X OPTIONS "$BASE/api/si/ask" \
            -H "Origin: https://app.cognomega.com" \
            -H "Access-Control-Request-Method: POST" \
            -H "Access-Control-Request-Headers: content-type, x-user-email, x-intelligence-tier" | tee -a proofs.txt

      - name: Upload caps
        if: env.SMOKE_EMAIL != ''
        run: |
          set -euo pipefail
          echo "== Upload caps ==" | tee -a proofs.txt
          head -c 1048576 /dev/urandom > ok.bin
          code=$(curl -sS -o /dev/null -w "%{http_code}" "$BASE/api/upload/direct?filename=ok-1mb.bin" -X POST -H "X-User-Email: $SMOKE_EMAIL" --data-binary @ok.bin -H "Content-Type: application/octet-stream")
          echo "ok.bin => $code" | tee -a proofs.txt
          test "$code" -eq 200
          head -c 11534336 /dev/urandom > big.bin
          code=$(curl -sS -o /dev/null -w "%{http_code}" "$BASE/api/upload/direct?filename=oversize.bin" -X POST -H "X-User-Email: $SMOKE_EMAIL" --data-binary @big.bin -H "Content-Type: application/octet-stream")
          echo "big.bin => $code" | tee -a proofs.txt
          test "$code" -eq 413

      - name: Upload proofs
        uses: actions/upload-artifact@v4
        with:
          name: post-deploy-proofs
          path: |
            proofs.txt
            jwks.json
            jwks_headers.txt
            guest.json
            jwt_info.json
            si_headers.txt
